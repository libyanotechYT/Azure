{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "THIS GETS GENERATED BY THE POWERSHELL"
      }
      },
    "tests": {
      "type": "array",
      "metadata": {
        "description": "THIS GETS GENERATED BY THE POWERSHELL"
      }
    },
    "actiongroupname": {
           "type": "string",
           "metadata": {
        "description": "THIS GETS GENERATED BY THE POWERSHELL"
      }
    },

    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "apiVersion": "2015-05-01",
      "name": "[parameters('appName')]",
      "type": "microsoft.insights/components",
      "location": "[parameters('location')]",
      "tags": {
        "AppInsightsApp": "[parameters('appName')]"
      },
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "Unknown",
        "Name": "testapp",
        "ApplicationId": "[parameters('appName')]"
      },
      "kind": "web"
    },
    {
      "name": "[parameters('tests')[0].name]",
      "apiVersion": "2015-05-01",
      "type": "microsoft.insights/webtests",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceId('microsoft.insights/components/', parameters('appName')))]": "Resource"
      },
      "dependsOn": [
        "[concat('microsoft.insights/components/', parameters('appName'))]"
      ],
      "properties": {
        "Name": "[parameters('tests')[0].name]",
        "Description": "[parameters('tests')[0].description]",
        "Enabled": true,
        "Frequency": "[parameters('tests')[0].frequency_secs]",
        "Timeout": "[parameters('tests')[0].timeout_secs]",
        "Kind": "ping",
        "Locations": "[parameters('tests')[0].locations]",
        "Configuration": {
          "WebTest": "[concat('<WebTest Name=\"', parameters('tests')[0].name, '\"',  ' Id=\"', parameters('tests')[0].guid ,'\"    Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"0\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">        <Items>        <Request Method=\"GET\" Guid=\"a5f10126-e4cd-570d-961c-cea43999a200\" Version=\"1.1\" Url=\"', parameters('tests')[0].url ,'\" ThinkTime=\"0\" Timeout=\"300\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"', parameters('tests')[0].expected ,'\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>')]"
        },
        "SyntheticMonitorId": "[parameters('tests')[0].name]"
      }
    },
    {
      "name": "[concat(parameters('tests')[0].name, 'alert')]",
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "location": "global",
      "dependsOn": [
        "[concat('microsoft.insights/components/', parameters('appName'))]",
        "[concat('microsoft.insights/webtests/', parameters('tests')[0].name)]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('microsoft.insights/components/', parameters('appName')))]": "Resource",
        "[concat('hidden-link:', resourceId('microsoft.insights/webtests/', parameters('tests')[0].name))]": "Resource"
      },
      "properties": {
        "description": "[parameters('tests')[0].description]",
        "severity": 1,
        "enabled": true,
        "scopes": [
          "[resourceId('microsoft.insights/webtests/', parameters('tests')[0].name)]",
          "[resourceId('Microsoft.Insights/components',parameters('appName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "templateType": 0,
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
          "webTestId": "[resourceId('microsoft.insights/webtests/', parameters('tests')[0].name)]",
          "componentId": "[resourceId('Microsoft.Insights/components', parameters('appName'))]",
          "failedLocationCount": 1
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actiongroups', parameters('actiongroupname'))]"
          }
        ]
      }
    },
        {
      "name": "[concat(parameters('tests')[copyIndex(1)].name, 'alert')]",
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "location": "global",
      "dependsOn": [
        "[concat('microsoft.insights/components/', parameters('appName'))]",
        "createTests"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('microsoft.insights/components/', parameters('appName')))]": "Resource",
        "[concat('hidden-link:', resourceId('microsoft.insights/webtests/', parameters('tests')[copyIndex(1)].name))]": "Resource"
      },
      "properties": {
        "description": "[parameters('tests')[copyIndex(1)].description]",
        "severity": 1,
        "enabled": true,
        "scopes": [
          "[resourceId('microsoft.insights/webtests/', parameters('tests')[copyIndex()].name)]",
          "[resourceId('Microsoft.Insights/components',parameters('appName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "templateType": 0,
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
          "webTestId": "[resourceId('microsoft.insights/webtests/', parameters('tests')[copyIndex()].name)]",
          "componentId": "[resourceId('Microsoft.Insights/components', parameters('appName'))]",
          "failedLocationCount": 1
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actiongroups', parameters('actiongroupname'))]"
          }
        ]
      },
      "copy": {
        "name": "createAlerts",
        "count": "[sub(length(parameters('tests')), 1)]"
      }
    },
   {
      "name": "[parameters('tests')[copyIndex(1)].name]",
      "apiVersion": "2015-05-01",
      "type": "microsoft.insights/webtests",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceId('microsoft.insights/components/', parameters('appName')))]": "Resource"
      },
      "dependsOn": [
        "[concat('microsoft.insights/components/', parameters('appName'))]",
        "[concat('microsoft.insights/webtests/', parameters('tests')[copyIndex()].name)]"
      ],
      "properties": {
        "Name": "[parameters('tests')[copyIndex(1)].name]",
        "Description": "[parameters('tests')[copyIndex(1)].description]",
        "Enabled": true,
        "Frequency": "[parameters('tests')[copyIndex(1)].frequency_secs]",
        "Timeout": "[parameters('tests')[copyIndex(1)].timeout_secs]",
        "Kind": "ping",
        "Locations": "[parameters('tests')[copyIndex(1)].locations]",
        "Configuration": {
          "WebTest": "[concat('<WebTest Name=\"', parameters('tests')[copyIndex(1)].name, '\"',  ' Id=\"', parameters('tests')[copyIndex(1)].guid ,'\"    Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"0\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">        <Items>        <Request Method=\"GET\" Guid=\"a5f10126-e4cd-570d-961c-cea43999a200\" Version=\"1.1\" Url=\"', parameters('tests')[copyIndex(1)].url ,'\" ThinkTime=\"0\" Timeout=\"300\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"', parameters('tests')[copyIndex(1)].expected ,'\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>')]"
        },
        "SyntheticMonitorId": "[parameters('tests')[copyIndex(1)].name]"
      },
      "copy": {
        "name": "createTests",
        "count": "[sub(length(parameters('tests')), 1)]"
      }
    }
  ]
}
